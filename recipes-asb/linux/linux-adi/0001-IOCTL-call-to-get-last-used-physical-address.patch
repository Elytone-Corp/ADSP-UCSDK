From 52774f999712e7a28f6168c631081d4f184588d6 Mon Sep 17 00:00:00 2001
From: Harvin Almeida <harvin.almeida@analog.com>
Date: Fri, 18 Mar 2022 19:58:24 +0000
Subject: [PATCH] IOCTL call to get last used physical address

---
 drivers/misc/adi/sram_mmap.c | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/drivers/misc/adi/sram_mmap.c b/drivers/misc/adi/sram_mmap.c
index 02854d6cfa67..ef5e3f3d3e71 100644
--- a/drivers/misc/adi/sram_mmap.c
+++ b/drivers/misc/adi/sram_mmap.c
@@ -15,8 +15,12 @@
 #include <linux/genalloc.h>
 #include <linux/miscdevice.h>
 #include <linux/platform_device.h>
+#include <linux/ioctl.h>
 
 #define SRAM_MMAP_DRV_NAME		"sram_mmap"
+#define PHYSADDR _IOR(0x6B,0x01,unsigned long)
+
+unsigned long paddr = 0;
 
 struct adi_sram_mmap {
 	struct miscdevice miscdev;
@@ -60,7 +64,7 @@ static int sram_mmap(struct file *fp, struct vm_area_struct *vma)
 				struct adi_sram_mmap, miscdev);
 	struct mmap_private_data *pdata;
 	size_t sram_size = vma->vm_end - vma->vm_start;
-	unsigned long paddr;
+
 	int ret = 0;
 
 	/*  Allocate private pdata */
@@ -101,8 +105,29 @@ static int sram_mmap(struct file *fp, struct vm_area_struct *vma)
 	return ret;
 }
 
+static long sram_ioctl(struct file *file,unsigned int cmd, unsigned long arg)
+{
+	int err=0;
+
+	if(_IOC_DIR(cmd) & _IOC_READ)
+		err = !access_ok((void __user *)arg, _IOC_SIZE(cmd));
+
+	switch (cmd)
+	{
+	case PHYSADDR:
+		put_user(paddr,(unsigned long __user *)arg);
+		break;
+	
+	default:
+		break;
+	}
+
+	return err;
+}
+
 static const struct file_operations sram_fops = {
 	.mmap		= sram_mmap,
+	.unlocked_ioctl = sram_ioctl,
 };
 
 static const struct of_device_id adi_sram_mmap_of_match[] = {
-- 
2.17.1

